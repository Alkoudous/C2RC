DROP TABLE IF EXISTS DATABASE_TBL;

CREATE TABLE DATABASE_TBL (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    civil_registries_path TEXT NOT NULL,
    reconstituted_path TEXT NOT NULL,
    stats TEXT NULL,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS STATE_TBL;
CREATE TABLE STATE_TBL (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    cluster_size INTEGER DEFAULT 0 NOT NULL,
    current_page INTEGER DEFAULT 0 NOT NULL,
    table_row INTEGER DEFAULT 1 NOT NULL,
    table_limit INTEGER DEFAULT 10 NOT NULL,
    max_pages INTEGER DEFAULT 0 NOT NULL,
    filter TEXT DEFAULT 'All' NOT NULL,
    validated TEXT DEFAULT 'ignore' NOT NULL,
    hide_table TEXT DEFAULT 'off' NOT NULL
);

DROP TABLE IF EXISTS civ_inputs;
CREATE TABLE civ_inputs (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    path TEXT NOT NULL,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS input_files;
CREATE TABLE input_files (
    description TEXT PRIMARY KEY,
    path TEXT NOT NULL
);

DROP TABLE IF EXISTS output_files;
CREATE TABLE output_files (
    name TEXT PRIMARY KEY,
    description TEXT NULL
);

DROP TABLE IF EXISTS CLUSTERS_TBL;
CREATE TABLE CLUSTERS_TBL (
    id TEXT PRIMARY KEY,
    serialised TEXT NOT NULL
);

DROP TABLE IF EXISTS PERSON_TBL;
CREATE TABLE PERSON_TBL (
    id TEXT PRIMARY KEY,
    personID TEXT NOT NULl,
    type TEXT NULL,
    age integer NULL,
    gender integer NULL,
    givenName TEXT NULL,
    familyName TEXT NULL,
    occupationTitle TEXT NULL,
    prefixFamilyName TEXT NULL
);

DROP TABLE IF EXISTS EVAL_STATS;
CREATE TABLE EVAL_STATS (
    c_size integer PRIMARY KEY,
    total integer NOT NULl,
    likelyWithoutWarning integer NOT NULl,
    likelyWithWarning integer NOT NULl,
    uncertain integer NOT NULl,
    unlikely integer NOT NULl
);

DROP TABLE IF EXISTS PERSON_2_EVENTS_TBL;
CREATE TABLE PERSON_2_EVENTS_TBL (
    id TEXT PRIMARY KEY,
    serialised TEXT NOT NULL
);

DROP TABLE IF EXISTS PERSON_ID2CLUSTER_TBL;
CREATE TABLE PERSON_ID2CLUSTER_TBL (
    id TEXT PRIMARY KEY,
    serialised TEXT NOT NULL
);

DROP TABLE IF EXISTS EVENTS_TBL;
CREATE TABLE EVENTS_TBL (
    id TEXT PRIMARY KEY,
    serialised TEXT NOT NULL
);

DROP TABLE IF EXISTS FULL_EVENTS_TBL;
CREATE TABLE FULL_EVENTS_TBL (
    id TEXT PRIMARY KEY,
    serialised TEXT NOT NULL
);

DROP TABLE IF EXISTS ASSOCIATION_LIST_TBL;
CREATE TABLE ASSOCIATION_LIST_TBL (
    id TEXT PRIMARY KEY,
    serialised TEXT NOT NULL
);

DROP TABLE IF EXISTS ASSOCIATION_DICT_TBL;
CREATE TABLE ASSOCIATION_DICT_TBL (
    id TEXT PRIMARY KEY,
    serialised TEXT NOT NULL
);

DROP TABLE IF EXISTS RESULT_TBL;
CREATE TABLE RESULT_TBL (
    cid integer PRIMARY KEY,
    c_size integer NOT NULL,
    name TEXT NOT NULL,
    flag TEXT NOT NULL,
    validated TEXT DEFAULT "no" NOT NULL,
    marital_text TEXT NOT NULL,
    bads integer NOT NULL,
    maybes integer NOT NULL,
    summary TEXT NOT NULL,
    description TEXT NOT NULL,
    grounded_table TEXT NOT NULL,
    groundless_table TEXT NOT NULL,
    validated_table TEXT NULL,
    rdf_data NOT NULL
);

CREATE UNIQUE INDEX IDX_RESULT_TBL
ON RESULT_TBL (name, c_size, cid, validated);

CREATE UNIQUE INDEX IDX_RESULT_TBL_CID
ON RESULT_TBL (cid);

CREATE INDEX IDX_RESULT_TBL_SIZE
ON RESULT_TBL (c_size);

CREATE INDEX IDX_RESULT_TBL_FLAG
ON RESULT_TBL (flag);

CREATE INDEX IDX_RESULT_TBL_SIZE_FLAG
ON RESULT_TBL (c_size, flag);

CREATE INDEX IDX_RESULT_TBL_SIZE_FLAG_MAYBES
ON RESULT_TBL (c_size, flag, maybes);

CREATE INDEX IDX_RESULT_TBL_MAYBES_FLAG
ON RESULT_TBL (maybes, flag);

CREATE INDEX IDX_RESULT_TBL_SIZE_VALIDATED
ON RESULT_TBL (validated);

CREATE INDEX IDX_EVAL_STATS_SIZE
ON EVAL_STATS (c_size);

DROP TABLE IF EXISTS RDF_AUTOMATED_VALIDATION_TBL;
CREATE TABLE RDF_AUTOMATED_VALIDATION_TBL (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    c_size integer NOT NULL,
    stat TEXT NOT NULL,
    validation TEXT NOT NULL
);

DROP TABLE IF EXISTS RDF_MANUAL_VALIDATION_TBL;
CREATE TABLE RDF_MANUAL_VALIDATION_TBL (
    cid integer PRIMARY KEY,
    c_size integer NOT NULL,
    validation TEXT NOT NULL
);

CREATE INDEX IDX_RDF_MANUAL_VALIDATION_TBL_1
ON RDF_MANUAL_VALIDATION_TBL (cid, validation);

CREATE INDEX IDX_RDF_MANUAL_VALIDATION_TBL_2
ON RDF_MANUAL_VALIDATION_TBL (c_size, validation);

CREATE INDEX IDX_RDF_MANUAL_VALIDATION_TBL_3
ON RDF_MANUAL_VALIDATION_TBL (cid, c_size, validation);
